{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-posts-firebase-react-index-md-fcf16efc7da2d3b96572.js","mappings":"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","sources":["webpack://gatsby-blog/./content/posts/Firebase-react/index.md","webpack://gatsby-blog/./src/templates/blog-post.tsx","webpack://gatsby-blog/./src/components/mdx.tsx","webpack://gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"說明\"), \"\\n\", React.createElement(_components.p, null, \"Firebase是Google提供的一個用於開發Web和行動應用程序的後端平台，它為開發人員提供了一個全面的解決方案，用於構建高質量的應用程序。Firebase包含了各種工具和服務，例如：數據庫、身份驗證、存儲、推送通知、分析、測試和性能監測等。Firebase使得開發人員能夠快速開發，測試和發佈應用程序，並且能夠與Google Cloud和其他第三方服務輕鬆集成。\"), \"\\n\", React.createElement(_components.h2, null, \"實作\"), \"\\n\", React.createElement(_components.h3, null, \"建立 Firebase 專案\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://console.firebase.google.com/\"\n  }, \"點擊此連結\"), \"，到Firebase網站建立專案，名稱自己設定。\"), \"\\n\", React.createElement(_components.h3, null, \"建立React專案\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"使用 vite 建置 react 專案\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm create vite@latest\\ncd <project name>\\nnpm install\\nnpm run build\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"全域環境中安裝Firebase CLI 工具\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npm install -g firebase-tools\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"連結至Firebase\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"firebase login\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"初始化firebase專案\"), \"\\n\", React.createElement(_components.p, null, \"選擇\", React.createElement(_components.code, null, \"Hosting: Configure files for Firebase Hosting and (optionally) set up GitHub Action deploys\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"firebase init\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"部署至Firebase\"), \"\\n\", React.createElement(_components.p, null, \"注意要更改輸出目錄。\", React.createElement(_components.code, null, \"? What do you want to use as your public directory? dist\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"firebase deploy\\n\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/wei-chieh/Desktop/gatsby-blog/content/posts/Firebase-react/index.md\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from \"@/components/ui/card\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {components} from \"@/components/mdx\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const {title, date} = data.allMdx.nodes[0].frontmatter;\n  return React.createElement(Layout, {\n    pageTitle: title\n  }, React.createElement(Card, null, React.createElement(CardHeader, null, React.createElement(CardTitle, {\n    className: \"text-2xl text-center\"\n  }, title), React.createElement(CardDescription, null, date)), React.createElement(CardContent, null, React.createElement(MDXProvider, {\n    components: components\n  }, children))));\n};\nconst pageQuery = \"29865885\";\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\"\n\n// custom components for markdown content\nexport const components = {\n  h1: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h1 className=\"text-4xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h2: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h2 className=\"text-3xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h3: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h3 className=\"text-2xl font-semibold mt-6 mb-3\" {...props} />\n  ),\n  h4: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h4 className=\"text-xl font-semibold mt-5 mb-2\" {...props} />\n  ),\n  h5: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h5 className=\"text-lg font-semibold mt-4 mb-2\" {...props} />\n  ),\n  h6: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h6 className=\"text-base font-semibold mt-4 mb-2\" {...props} />\n  ),\n  p: (props: React.HTMLAttributes<HTMLParagraphElement>) => (\n    <p className=\"my-4 text-base leading-6 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ul: (props: React.HTMLAttributes<HTMLUListElement>) => (\n    <ul className=\"list-disc pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ol: (props: React.HTMLAttributes<HTMLOListElement>) => (\n    <ol className=\"list-decimal pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  li: (props: React.HTMLAttributes<HTMLLIElement>) => (\n    <li className=\"my-1\" {...props} />\n  ),\n  a: (props: React.HTMLAttributes<HTMLAnchorElement>) => (\n    <a className=\"text-blue-600 hover:underline dark:text-blue-400\" {...props} />\n  ),\n  blockquote: (props: React.HTMLAttributes<HTMLQuoteElement>) => (\n    <blockquote className=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 text-gray-600 dark:text-gray-400 my-4\" {...props} />\n  ),\n  code: (props: React.HTMLAttributes<HTMLElement>) => (\n    <code className=\"bg-gray-100 dark:bg-gray-800 rounded px-1 py-0.5 font-mono text-sm text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  pre: (props: React.HTMLAttributes<HTMLPreElement>) => (\n    <pre style={{ overflowX: \"auto\"}} className=\"bg-gray-100 dark:bg-gray-800 rounded-md p-4 my-4 overflow-x-auto text-sm font-mono text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  table: (props: React.TableHTMLAttributes<HTMLTableElement>) => (\n    <div className=\"overflow-x-auto my-4\">\n      <table className=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\" {...props} />\n    </div>\n  ),\n  th: (props: React.ThHTMLAttributes<HTMLTableHeaderCellElement>) => (\n    <th className=\"border border-gray-300 dark:border-gray-700 px-4 py-2 bg-gray-100 dark:bg-gray-800 font-semibold text-left\" {...props} />\n  ),\n  td: (props: React.TdHTMLAttributes<HTMLTableDataCellElement>) => (\n    <td className=\"border border-gray-300 dark:border-gray-700 px-4 py-2\" {...props} />\n  ),\n  hr: (props: React.HTMLAttributes<HTMLHRElement>) => (\n    <hr className=\"my-8 border-t border-gray-300 dark:border-gray-700\" {...props} />\n  ),\n  img: (props: React.ImgHTMLAttributes<HTMLImageElement>) => (\n    <img className=\"max-w-full h-auto rounded-md my-4\" {...props} alt={props.alt || ''} />\n  ),\n}","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","a","ol","li","pre","code","_provideComponents","components","React","href","className","wrapper","MDXLayout","BlogPost","_ref","data","children","title","date","allMdx","nodes","frontmatter","Layout","pageTitle","Card","CardHeader","CardTitle","CardDescription","CardContent","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","h1","h4","h5","h6","ul","blockquote","style","overflowX","table","th","td","hr","img","alt","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}