{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-posts-electron-react-index-md-cc0c965e31283c8fb44f.js","mappings":"oLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,eAAgB,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CAChMI,UAAW,iBACV,wCAAyC,KAAMD,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,QAAS,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CAC1LI,UAAW,iBACV,0GAA2G,KAAMD,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,MAAOK,EAAAA,cAAoBR,EAAYK,KAAM,KAAM,iBAAkB,KAAMG,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CACxTI,UAAW,iBACV,mVAA8W,KAAMD,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,MAAOK,EAAAA,cAAoBR,EAAYK,KAAM,KAAM,mBAAoB,KAAMG,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CAC7jBI,UAAW,gBACV,q2BAAs2B,KAAMD,EAAAA,cAAoBR,EAAYG,GAAI,KAAM,QAAS,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CACv/BI,UAAW,iBACV,0BACL,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,6BClBA,MAAMa,EAAWC,IACf,IAAI,KAACC,EAAI,SAAEC,GAAYF,EACvB,MAAM,MAACG,EAAK,KAAEC,GAAQH,EAAKI,OAAOC,MAAM,GAAGC,YAC3C,OAAOZ,EAAAA,cAAoBa,EAAAA,EAAQ,CACjCC,UAAWN,GACVR,EAAAA,cAAoBe,EAAAA,GAAM,KAAMf,EAAAA,cAAoBgB,EAAAA,GAAY,KAAMhB,EAAAA,cAAoBiB,EAAAA,GAAW,CACtGhB,UAAW,wBACVO,GAAQR,EAAAA,cAAoBkB,EAAAA,GAAiB,KAAMT,IAAQT,EAAAA,cAAoBmB,EAAAA,GAAa,KAAMnB,EAAAA,cAAoBoB,EAAAA,EAAa,CACpIrB,WAAYA,EAAAA,GACXQ,KAAY,EAIF,SAASc,EAAiB9B,GACvC,OAAOS,EAAAA,cAAoBI,EAAUb,EAAOS,EAAAA,cAAoBsB,EAAqB/B,GACvF,C,qEClBO,MAAMQ,EAAa,CACxBwB,GAAKhC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,8EAAiFV,IAEjGI,GAAKJ,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,8EAAiFV,IAEjGiC,GAAKjC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,oCAAuCV,IAEvDkC,GAAKlC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,mCAAsCV,IAEtDmC,GAAKnC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,mCAAsCV,IAEtDoC,GAAKpC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,qCAAwCV,IAExDqC,EAAIrC,GACFS,EAAAA,cAAA,IAAAP,OAAAC,OAAA,CAAGO,UAAU,6DAAgEV,IAE/EsC,GAAKtC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,wDAA2DV,IAE3EuC,GAAKvC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,2DAA8DV,IAE9EwC,GAAKxC,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,QAAWV,IAE3ByC,EAAIzC,GACFS,EAAAA,cAAA,IAAAP,OAAAC,OAAA,CAAGO,UAAU,oDAAuDV,IAEtE0C,WAAa1C,GACXS,EAAAA,cAAA,aAAAP,OAAAC,OAAA,CAAYO,UAAU,8FAAiGV,IAEzHM,KAAON,GACLS,EAAAA,cAAA,OAAAP,OAAAC,OAAA,CAAMO,UAAU,uGAA0GV,IAE5HK,IAAML,GACJS,EAAAA,cAAA,MAAAP,OAAAC,OAAA,CAAKwC,MAAO,CAAEC,UAAW,QAASlC,UAAU,uHAA0HV,IAExK6C,MAAQ7C,GACNS,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAAA,QAAAP,OAAAC,OAAA,CAAOO,UAAU,0EAA6EV,KAGlG8C,GAAK9C,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,8GAAiHV,IAEjI+C,GAAK/C,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,yDAA4DV,IAE5EgD,GAAKhD,GACHS,EAAAA,cAAA,KAAAP,OAAAC,OAAA,CAAIO,UAAU,sDAAyDV,IAEzEiD,IAAMjD,GACJS,EAAAA,cAAA,MAAAP,OAAAC,OAAA,CAAKO,UAAU,qCAAwCV,EAAK,CAAEkD,IAAKlD,EAAMkD,KAAO,M,4FClCpF,MAAMC,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiB7C,GAC/B,MAAM8C,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAf5C,EACFA,EAAW8C,GAGb,IAAIA,KAAsB9C,EACnC,GACA,CAAC8C,EAAmB9C,GAExB,CAWO,SAASqB,EAAY0B,GAE1B,IAAIC,EAWJ,OAREA,EADED,EAAWE,qBAEsB,mBAA1BF,EAAW/C,WACd+C,EAAW/C,WAAW2C,GACtBI,EAAW/C,YAAc2C,EAEfE,EAAiBE,EAAW/C,YAGvC,gBACL4C,EAAWM,SACX,CAACC,MAAOH,GACRD,EAAWvC,SAEf,C","sources":["webpack://gatsby-blog/./content/posts/electron-react/index.md","webpack://gatsby-blog/./src/templates/blog-post.tsx","webpack://gatsby-blog/./src/components/mdx.tsx","webpack://gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"創建react app\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"npx create-react-app electron-app\\n\")), \"\\n\", React.createElement(_components.h2, null, \"安裝套件\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"cd electron-app\\nyarn add --dev  electron electron-builder\\nyarn add concurrently wait-on cross-env\\n\")), \"\\n\", React.createElement(_components.h2, null, \"設定 \", React.createElement(_components.code, null, \"package.json\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"main\\\": \\\"public/main.js\\\",\\n  \\\"homepage\\\": \\\"./\\\",\\n  \\\"scripts\\\": {\\n    \\\"electron:serve\\\": \\\"concurrently -k \\\\\\\"cross-env BROWSER=none yarn start\\\\\\\" \\\\\\\"yarn electron:start\\\\\\\"\\\",\\n    \\\"electron:build\\\": \\\"yarn build && electron-builder -c.extraMetadata.main=build/main.js\\\",\\n    \\\"electron:start\\\": \\\"wait-on tcp:3000 && electron .\\\"\\n\\t}\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"新增 \", React.createElement(_components.code, null, \"public/main.js\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"// public/main.js\\nconst { app, BrowserWindow } = require('electron')\\n\\nfunction createWindow() {\\n  // Create the browser window.\\n  const win = new BrowserWindow({\\n    width: 800,\\n    height: 600,\\n    webPreferences: {\\n      enableRemoteModule: true\\n    }\\n  })\\n\\n  win.loadURL('http://localhost:3000')\\n}\\n\\napp.on('ready', createWindow)\\n\\n// Quit when all windows are closed.\\napp.on('window-all-closed', function () {\\n  // On OS X it is common for applications and their menu bar\\n  // to stay active until the user quits explicitly with Cmd + Q\\n  if (process.platform !== 'darwin') {\\n    app.quit()\\n  }\\n})\\n\\napp.on('activate', function () {\\n  // On OS X it's common to re-create a window in the app when the\\n  // dock icon is clicked and there are no other windows open.\\n  if (BrowserWindow.getAllWindows().length === 0) createWindow()\\n})\\n\")), \"\\n\", React.createElement(_components.h2, null, \"開啟服務\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"yarn electron:serve\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/wei-chieh/Desktop/gatsby-blog/content/posts/electron-react/index.md\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from \"@/components/ui/card\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {components} from \"@/components/mdx\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const {title, date} = data.allMdx.nodes[0].frontmatter;\n  return React.createElement(Layout, {\n    pageTitle: title\n  }, React.createElement(Card, null, React.createElement(CardHeader, null, React.createElement(CardTitle, {\n    className: \"text-2xl text-center\"\n  }, title), React.createElement(CardDescription, null, date)), React.createElement(CardContent, null, React.createElement(MDXProvider, {\n    components: components\n  }, children))));\n};\nconst pageQuery = \"29865885\";\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\"\n\n// custom components for markdown content\nexport const components = {\n  h1: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h1 className=\"text-4xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h2: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h2 className=\"text-3xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h3: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h3 className=\"text-2xl font-semibold mt-6 mb-3\" {...props} />\n  ),\n  h4: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h4 className=\"text-xl font-semibold mt-5 mb-2\" {...props} />\n  ),\n  h5: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h5 className=\"text-lg font-semibold mt-4 mb-2\" {...props} />\n  ),\n  h6: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h6 className=\"text-base font-semibold mt-4 mb-2\" {...props} />\n  ),\n  p: (props: React.HTMLAttributes<HTMLParagraphElement>) => (\n    <p className=\"my-4 text-base leading-6 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ul: (props: React.HTMLAttributes<HTMLUListElement>) => (\n    <ul className=\"list-disc pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ol: (props: React.HTMLAttributes<HTMLOListElement>) => (\n    <ol className=\"list-decimal pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  li: (props: React.HTMLAttributes<HTMLLIElement>) => (\n    <li className=\"my-1\" {...props} />\n  ),\n  a: (props: React.HTMLAttributes<HTMLAnchorElement>) => (\n    <a className=\"text-blue-600 hover:underline dark:text-blue-400\" {...props} />\n  ),\n  blockquote: (props: React.HTMLAttributes<HTMLQuoteElement>) => (\n    <blockquote className=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 text-gray-600 dark:text-gray-400 my-4\" {...props} />\n  ),\n  code: (props: React.HTMLAttributes<HTMLElement>) => (\n    <code className=\"bg-gray-100 dark:bg-gray-800 rounded px-1 py-0.5 font-mono text-sm text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  pre: (props: React.HTMLAttributes<HTMLPreElement>) => (\n    <pre style={{ overflowX: \"auto\"}} className=\"bg-gray-100 dark:bg-gray-800 rounded-md p-4 my-4 overflow-x-auto text-sm font-mono text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  table: (props: React.TableHTMLAttributes<HTMLTableElement>) => (\n    <div className=\"overflow-x-auto my-4\">\n      <table className=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\" {...props} />\n    </div>\n  ),\n  th: (props: React.ThHTMLAttributes<HTMLTableHeaderCellElement>) => (\n    <th className=\"border border-gray-300 dark:border-gray-700 px-4 py-2 bg-gray-100 dark:bg-gray-800 font-semibold text-left\" {...props} />\n  ),\n  td: (props: React.TdHTMLAttributes<HTMLTableDataCellElement>) => (\n    <td className=\"border border-gray-300 dark:border-gray-700 px-4 py-2\" {...props} />\n  ),\n  hr: (props: React.HTMLAttributes<HTMLHRElement>) => (\n    <hr className=\"my-8 border-t border-gray-300 dark:border-gray-700\" {...props} />\n  ),\n  img: (props: React.ImgHTMLAttributes<HTMLImageElement>) => (\n    <img className=\"max-w-full h-auto rounded-md my-4\" {...props} alt={props.alt || ''} />\n  ),\n}","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","_ref","data","children","title","date","allMdx","nodes","frontmatter","Layout","pageTitle","Card","CardHeader","CardTitle","CardDescription","CardContent","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","h1","h3","h4","h5","h6","p","ul","ol","li","a","blockquote","style","overflowX","table","th","td","hr","img","alt","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}