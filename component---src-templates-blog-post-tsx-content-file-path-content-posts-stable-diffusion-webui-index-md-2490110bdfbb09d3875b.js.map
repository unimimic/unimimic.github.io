{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-posts-stable-diffusion-webui-index-md-2490110bdfbb09d3875b.js","mappings":"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","sources":["webpack://gatsby-blog/./content/posts/stable-diffusion-webui/index.md","webpack://gatsby-blog/./src/templates/blog-post.tsx","webpack://gatsby-blog/./src/components/mdx.tsx","webpack://gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ol: \"ol\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"說明\"), \"\\n\", React.createElement(_components.p, null, \"官方做法沒有針對 conda 環境說明手動安裝。以下是紀錄在 windows 使用 conda 環境搭建 Stable Diffusion web UI，主要是給原本就有 conda 環境的使用者參考。\"), \"\\n\", React.createElement(_components.h2, null, \"實作\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"使用\", React.createElement(_components.code, null, \"conda\"), \"創建虛擬環境。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"conda create -n test python=3.8\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"安裝\", React.createElement(_components.code, null, \"torch\"), \"，到官方選擇與電腦可匹配的 torch GPU 版本。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu116\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"拉取專案。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git\\ncd stable-diffusion-webui\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"安裝其他依賴套件。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"pip install -r requirements.txt\\n\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"執行腳本。執行過程中會安裝一些相依套件，最後會跑出\", React.createElement(_components.code, null, \"Running on local URL: http://127.0.0.1:7860\"), \"訊息代表成功執行。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"python launch.py\\n\")), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/wei-chieh/Desktop/gatsby-blog/content/posts/stable-diffusion-webui/index.md\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from \"@/components/ui/card\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {components} from \"@/components/mdx\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const {title, date} = data.allMdx.nodes[0].frontmatter;\n  return React.createElement(Layout, {\n    pageTitle: title\n  }, React.createElement(Card, null, React.createElement(CardHeader, null, React.createElement(CardTitle, {\n    className: \"text-2xl text-center\"\n  }, title), React.createElement(CardDescription, null, date)), React.createElement(CardContent, null, React.createElement(MDXProvider, {\n    components: components\n  }, children))));\n};\nconst pageQuery = \"29865885\";\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\"\n\n// custom components for markdown content\nexport const components = {\n  h1: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h1 className=\"text-4xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h2: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h2 className=\"text-3xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h3: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h3 className=\"text-2xl font-semibold mt-6 mb-3\" {...props} />\n  ),\n  h4: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h4 className=\"text-xl font-semibold mt-5 mb-2\" {...props} />\n  ),\n  h5: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h5 className=\"text-lg font-semibold mt-4 mb-2\" {...props} />\n  ),\n  h6: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h6 className=\"text-base font-semibold mt-4 mb-2\" {...props} />\n  ),\n  p: (props: React.HTMLAttributes<HTMLParagraphElement>) => (\n    <p className=\"my-4 text-base leading-6 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ul: (props: React.HTMLAttributes<HTMLUListElement>) => (\n    <ul className=\"list-disc pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ol: (props: React.HTMLAttributes<HTMLOListElement>) => (\n    <ol className=\"list-decimal pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  li: (props: React.HTMLAttributes<HTMLLIElement>) => (\n    <li className=\"my-1\" {...props} />\n  ),\n  a: (props: React.HTMLAttributes<HTMLAnchorElement>) => (\n    <a className=\"text-blue-600 hover:underline dark:text-blue-400\" {...props} />\n  ),\n  blockquote: (props: React.HTMLAttributes<HTMLQuoteElement>) => (\n    <blockquote className=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 text-gray-600 dark:text-gray-400 my-4\" {...props} />\n  ),\n  code: (props: React.HTMLAttributes<HTMLElement>) => (\n    <code className=\"bg-gray-100 dark:bg-gray-800 rounded px-1 py-0.5 font-mono text-sm text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  pre: (props: React.HTMLAttributes<HTMLPreElement>) => (\n    <pre style={{ overflowX: \"auto\"}} className=\"bg-gray-100 dark:bg-gray-800 rounded-md p-4 my-4 overflow-x-auto text-sm font-mono text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  table: (props: React.TableHTMLAttributes<HTMLTableElement>) => (\n    <div className=\"overflow-x-auto my-4\">\n      <table className=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\" {...props} />\n    </div>\n  ),\n  th: (props: React.ThHTMLAttributes<HTMLTableHeaderCellElement>) => (\n    <th className=\"border border-gray-300 dark:border-gray-700 px-4 py-2 bg-gray-100 dark:bg-gray-800 font-semibold text-left\" {...props} />\n  ),\n  td: (props: React.TdHTMLAttributes<HTMLTableDataCellElement>) => (\n    <td className=\"border border-gray-300 dark:border-gray-700 px-4 py-2\" {...props} />\n  ),\n  hr: (props: React.HTMLAttributes<HTMLHRElement>) => (\n    <hr className=\"my-8 border-t border-gray-300 dark:border-gray-700\" {...props} />\n  ),\n  img: (props: React.ImgHTMLAttributes<HTMLImageElement>) => (\n    <img className=\"max-w-full h-auto rounded-md my-4\" {...props} alt={props.alt || ''} />\n  ),\n}","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ol","li","code","pre","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","_ref","data","children","title","date","allMdx","nodes","frontmatter","Layout","pageTitle","Card","CardHeader","CardTitle","CardDescription","CardContent","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","h1","h3","h4","h5","h6","ul","a","blockquote","style","overflowX","table","th","td","hr","img","alt","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}