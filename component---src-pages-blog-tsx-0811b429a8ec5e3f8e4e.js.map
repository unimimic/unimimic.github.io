{"version":3,"file":"component---src-pages-blog-tsx-0811b429a8ec5e3f8e4e.js","mappings":"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","sources":["webpack://gatsby-blog/./src/hooks/use-site-metadata.tsx","webpack://gatsby-blog/./src/components/seo.tsx","webpack://gatsby-blog/./src/components/ui/button.tsx","webpack://gatsby-blog/./src/pages/blog.tsx","webpack://gatsby-blog/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://gatsby-blog/./node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://gatsby-blog/./node_modules/class-variance-authority/node_modules/clsx/dist/clsx.mjs","webpack://gatsby-blog/./node_modules/class-variance-authority/dist/index.mjs"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nexport const SEO: React.FC<SEOProps> = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      {children}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","import * as React from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport { SEO } from \"../components/seo\"\nimport { graphql } from 'gatsby'\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter, CardDescription } from \"@/components/ui/card\"\nimport { Button } from \"@/components/ui/button\"\nimport { Link } from \"gatsby\"\n\ninterface BlogPost {\n  id: string\n  frontmatter: {\n    title: string\n    date: string\n  }\n  internal: {\n    contentFilePath: string\n  }\n}\n\ninterface GroupedPosts {\n  [year: string]: BlogPost[]\n}\n\nconst BlogPage: React.FC<PageProps<{ allMdx: { nodes: BlogPost[] } }>> = ({ data }) => {\n  if (!data || !data.allMdx || !data.allMdx.nodes) {\n    return <p>No data found</p>\n  }\n\n  const groupPostsByYear = (posts: BlogPost[]): GroupedPosts => {\n    return posts.reduce((acc, post) => {\n      const year = new Date(post.frontmatter.date).getFullYear().toString()\n      if (!acc[year]) {\n        acc[year] = []\n      }\n      acc[year].push(post)\n      return acc\n    }, {} as GroupedPosts)\n  }\n\n  const extractContentDir = (filePath: string): string => {\n    // 使用正規表達式來從路徑中提取資料夾名稱\n    const match = filePath.match(/\\/([^/]+)\\/[^/]+$/);\n    return match ? match[1] : '';\n  }\n\n  const sortedYears = Object.keys(groupPostsByYear(data.allMdx.nodes)).sort((a, b) => parseInt(b) - parseInt(a))\n  const groupedPosts = groupPostsByYear(data.allMdx.nodes)\n\n  return (\n    <Layout pageTitle=\"\">\n      <section className=\"mb-12\">\n        <Card className=\"w-full\">\n          <CardHeader>\n            <CardTitle>Welcome to My Blog</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-gray-600 dark:text-gray-300\">\n              Here, I share my thoughts on technology, design, and life. Feel free to explore and engage with my content!\n            </p>\n          </CardContent>\n        </Card>\n      </section>\n      {sortedYears.map((year) => (\n        <section key={year} className=\"mb-12\">\n          <h2 className=\"text-2xl font-bold mb-6\">{year}</h2>\n          <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n            {groupedPosts[year].map((post) => {\n              const contentDir = extractContentDir(post.internal.contentFilePath)\n              return (\n                <Card key={post.id} className=\"flex flex-col\">\n                  <CardHeader className=\"flex-1 flex flex-col gap-1\">\n                    <CardTitle>{post.frontmatter.title}</CardTitle>\n                    <CardDescription>{post.frontmatter.date}</CardDescription>\n                  </CardHeader>\n                  <CardFooter>\n                    <Link to={`/posts/${contentDir}`}>\n                      <Button variant=\"outline\">Read More</Button>\n                    </Link>\n                  </CardFooter>\n                </Card>\n              )\n            })}\n          </div>\n        </section>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: {frontmatter: {date: DESC}}) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n        }\n        id\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPage\n\nexport const Head: HeadFC = () => <SEO title=\"Blog\" />\n","// packages/react/compose-refs/src/composeRefs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/slot/src/Slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Slot = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  const childrenArray = React.Children.toArray(children);\n  const slottable = childrenArray.find(isSlottable);\n  if (slottable) {\n    const newElement = slottable.props.children;\n    const newChildren = childrenArray.map((child) => {\n      if (child === slottable) {\n        if (React.Children.count(newElement) > 1) return React.Children.only(null);\n        return React.isValidElement(newElement) ? newElement.props.children : null;\n      } else {\n        return child;\n      }\n    });\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n  }\n  return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n});\nSlot.displayName = \"Slot\";\nvar SlotClone = React.forwardRef((props, forwardedRef) => {\n  const { children, ...slotProps } = props;\n  if (React.isValidElement(children)) {\n    const childrenRef = getElementRef(children);\n    return React.cloneElement(children, {\n      ...mergeProps(slotProps, children.props),\n      // @ts-ignore\n      ref: forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef\n    });\n  }\n  return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n});\nSlotClone.displayName = \"SlotClone\";\nvar Slottable = ({ children }) => {\n  return /* @__PURE__ */ jsx(Fragment, { children });\n};\nfunction isSlottable(child) {\n  return React.isValidElement(child) && child.type === Slottable;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          childPropValue(...args);\n          slotPropValue(...args);\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Slot;\nexport {\n  Root,\n  Slot,\n  Slottable\n};\n//# sourceMappingURL=index.mjs.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? \"\".concat(value) : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>{\n    return (props)=>{\n        var ref;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants , defaultVariants  } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1)=>{\n            let { class: cvClass , className: cvClassName , ...compoundVariantOptions } = param1;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n};\n\n\n//# sourceMappingURL=index.mjs.map"],"names":["SEO","_ref","title","description","pathname","children","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","React","name","content","buttonVariants","cva","variants","variant","default","destructive","outline","secondary","ghost","link","size","sm","lg","icon","defaultVariants","Button","ref","className","asChild","props","Comp","Slot","Object","assign","cn","displayName","data","allMdx","nodes","groupPostsByYear","posts","reduce","acc","post","year","Date","frontmatter","date","getFullYear","toString","push","sortedYears","keys","sort","a","b","parseInt","groupedPosts","Layout","pageTitle","Card","CardHeader","CardTitle","CardContent","map","key","contentDir","filePath","match","extractContentDir","internal","contentFilePath","id","CardDescription","CardFooter","Link","to","Head","composeRefs","refs","node","forEach","value","current","setRef","useComposedRefs","forwardedRef","slotProps","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","count","only","jsx","SlotClone","childrenRef","element","getter","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","getElementRef","mergeProps","Slottable","Fragment","type","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","filter","Boolean","join","r","e","t","f","n","Array","isArray","length","clsx","arguments","falsyToString","concat","cx","base","config","class","getVariantClassNames","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","entries","param","undefined","getCompoundVariantClassNames","compoundVariants","param1","cvClass","cvClassName","compoundVariantOptions","every","includes"],"sourceRoot":""}