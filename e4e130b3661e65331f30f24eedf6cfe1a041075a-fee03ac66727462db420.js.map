{"version":3,"file":"e4e130b3661e65331f30f24eedf6cfe1a041075a-fee03ac66727462db420.js","mappings":"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","sources":["webpack://gatsby-blog/./src/hooks/use-site-metadata.tsx","webpack://gatsby-blog/./src/components/seo.tsx","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-blog/./node_modules/framer-motion/dist/es/utils/noop.mjs"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ninterface SEOProps {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n}\n\nexport const SEO: React.FC<SEOProps> = ({ title, description, pathname, children }) => {\n  const { title: defaultTitle, description: defaultDescription, siteUrl } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      {children}\n    </>\n  )\n}\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","import { isWillChangeMotionValue } from './is.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange) &&\n        getWillChangeName(key)) {\n        visualElement.setStaticValue(\"willChange\", \"transform\");\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    let applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    const willChangeName = getWillChangeName(key);\n                    if (willChangeName) {\n                        values.willChange = \"transform\";\n                        return;\n                    }\n                }\n            });\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n"],"names":["SEO","_ref","title","description","pathname","children","defaultTitle","defaultDescription","siteUrl","useStaticQuery","site","siteMetadata","seo","url","React","name","content","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","cancelFrame","frameSteps","requestAnimationFrame","noop","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","y","paddingTop","paddingBottom","top","left","bottom","right","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","transformers","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","generateLinearEasing","points","numPoints","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isCustomValue","toValue","resolveFinalValueInKeyframes","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","getWillChangeName","addValueToWillChange","applyWillChange","willChange","style","setStaticValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","assign","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","warning","invariant","any"],"sourceRoot":""}