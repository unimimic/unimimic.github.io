{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-posts-arduino-proximity-sensor-index-md-522d4e06f8154b36b068.js","mappings":"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","sources":["webpack://gatsby-blog/./content/posts/arduino-proximity-sensor/index.md","webpack://gatsby-blog/./src/templates/blog-post.tsx","webpack://gatsby-blog/./src/components/mdx.tsx","webpack://gatsby-blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"簡單說明\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"這邊使用的近接感測器是 fotek SU Series U Type Photo Sensor (SU-02X)。接線方式：咖啡色是正，藍色是負，黑色是訊號線。\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"BOM表\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Arduino Uno\"), \"\\n\", React.createElement(_components.li, null, \"麵包板\"), \"\\n\", React.createElement(_components.li, null, \"端子台 (方便轉近接感測器)\"), \"\\n\", React.createElement(_components.li, null, \"近接感測器 (fotek SU-02X)\"), \"\\n\", React.createElement(_components.li, null, \"LM7805CV 穩壓模組\"), \"\\n\", React.createElement(_components.li, null, \"12V 直流電源\"), \"\\n\", React.createElement(_components.li, null, \"7條杜邦線\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"接線實作\"), \"\\n\", React.createElement(_components.h2, null, \"程式實作\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cpp\"\n  }, \"int readpin = 8;\\nint status = 0;\\n\\nvoid setup() {\\n  Serial.begin(9600);\\n  pinMode(readpin, INPUT);\\n}\\n\\nvoid loop() {\\n  if(digitalRead(readpin)==LOW){\\n    if (status==1){\\n      Serial.println(\\\"low\\\"); // 回應訊息給電腦\\n    }\\n    status = 0;\\n  }else{\\n    if (status==0){\\n      Serial.println(\\\"high\\\"); // 回應訊息給電腦\\n    }\\n    status = 1;\\n  }\\n  delay(10);\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/wei-chieh/Desktop/gatsby-blog/content/posts/arduino-proximity-sensor/index.md\";\nimport * as React from \"react\";\nimport Layout from \"../components/layout\";\nimport {Card, CardContent, CardDescription, CardHeader, CardTitle} from \"@/components/ui/card\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {components} from \"@/components/mdx\";\nconst BlogPost = _ref => {\n  let {data, children} = _ref;\n  const {title, date} = data.allMdx.nodes[0].frontmatter;\n  return React.createElement(Layout, {\n    pageTitle: title\n  }, React.createElement(Card, null, React.createElement(CardHeader, null, React.createElement(CardTitle, {\n    className: \"text-2xl text-center\"\n  }, title), React.createElement(CardDescription, null, date)), React.createElement(CardContent, null, React.createElement(MDXProvider, {\n    components: components\n  }, children))));\n};\nconst pageQuery = \"29865885\";\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\"\n\n// custom components for markdown content\nexport const components = {\n  h1: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h1 className=\"text-4xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h2: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h2 className=\"text-3xl font-semibold mt-8 mb-4 pb-2 border-gray-200 dark:border-gray-700\" {...props} />\n  ),\n  h3: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h3 className=\"text-2xl font-semibold mt-6 mb-3\" {...props} />\n  ),\n  h4: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h4 className=\"text-xl font-semibold mt-5 mb-2\" {...props} />\n  ),\n  h5: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h5 className=\"text-lg font-semibold mt-4 mb-2\" {...props} />\n  ),\n  h6: (props: React.HTMLAttributes<HTMLHeadingElement>) => (\n    <h6 className=\"text-base font-semibold mt-4 mb-2\" {...props} />\n  ),\n  p: (props: React.HTMLAttributes<HTMLParagraphElement>) => (\n    <p className=\"my-4 text-base leading-6 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ul: (props: React.HTMLAttributes<HTMLUListElement>) => (\n    <ul className=\"list-disc pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  ol: (props: React.HTMLAttributes<HTMLOListElement>) => (\n    <ol className=\"list-decimal pl-8 my-4 text-gray-800 dark:text-gray-300\" {...props} />\n  ),\n  li: (props: React.HTMLAttributes<HTMLLIElement>) => (\n    <li className=\"my-1\" {...props} />\n  ),\n  a: (props: React.HTMLAttributes<HTMLAnchorElement>) => (\n    <a className=\"text-blue-600 hover:underline dark:text-blue-400\" {...props} />\n  ),\n  blockquote: (props: React.HTMLAttributes<HTMLQuoteElement>) => (\n    <blockquote className=\"border-l-4 border-gray-300 dark:border-gray-600 pl-4 text-gray-600 dark:text-gray-400 my-4\" {...props} />\n  ),\n  code: (props: React.HTMLAttributes<HTMLElement>) => (\n    <code className=\"bg-gray-100 dark:bg-gray-800 rounded px-1 py-0.5 font-mono text-sm text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  pre: (props: React.HTMLAttributes<HTMLPreElement>) => (\n    <pre style={{ overflowX: \"auto\"}} className=\"bg-gray-100 dark:bg-gray-800 rounded-md p-4 my-4 overflow-x-auto text-sm font-mono text-gray-800 dark:text-gray-200\" {...props} />\n  ),\n  table: (props: React.TableHTMLAttributes<HTMLTableElement>) => (\n    <div className=\"overflow-x-auto my-4\">\n      <table className=\"min-w-full border-collapse border border-gray-300 dark:border-gray-700\" {...props} />\n    </div>\n  ),\n  th: (props: React.ThHTMLAttributes<HTMLTableHeaderCellElement>) => (\n    <th className=\"border border-gray-300 dark:border-gray-700 px-4 py-2 bg-gray-100 dark:bg-gray-800 font-semibold text-left\" {...props} />\n  ),\n  td: (props: React.TdHTMLAttributes<HTMLTableDataCellElement>) => (\n    <td className=\"border border-gray-300 dark:border-gray-700 px-4 py-2\" {...props} />\n  ),\n  hr: (props: React.HTMLAttributes<HTMLHRElement>) => (\n    <hr className=\"my-8 border-t border-gray-300 dark:border-gray-700\" {...props} />\n  ),\n  img: (props: React.ImgHTMLAttributes<HTMLImageElement>) => (\n    <img className=\"max-w-full h-auto rounded-md my-4\" {...props} alt={props.alt || ''} />\n  ),\n}","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","ul","li","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","BlogPost","_ref","data","children","title","date","allMdx","nodes","frontmatter","Layout","pageTitle","Card","CardHeader","CardTitle","CardDescription","CardContent","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","h1","h3","h4","h5","h6","p","ol","a","blockquote","style","overflowX","table","th","td","hr","img","alt","emptyComponents","MDXContext","useMDXComponents","contextComponents","properties","allComponents","disableParentContext","Provider","value"],"sourceRoot":""}